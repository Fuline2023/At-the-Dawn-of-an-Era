//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/_Project/InputSystem/GameController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameController: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameController"",
    ""maps"": [
        {
            ""name"": ""Player3rdPerson"",
            ""id"": ""8aad7505-e36c-47a0-ba7a-af941fd6d3bb"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""8c692598-9f9b-440f-988c-ec0575bd958c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""5578013d-7342-4899-a64c-cb010eea5076"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""52ad6f5a-8744-4b4f-ad7d-399bae2d19fe"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MeleeAttack"",
                    ""type"": ""Button"",
                    ""id"": ""018db922-944f-4ce6-b539-4b207ae60deb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MagicAttack"",
                    ""type"": ""Button"",
                    ""id"": ""e04b3054-38fc-40d0-8e87-5d294c0d6528"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""7a540f57-982c-4eeb-bbef-6067e6b7463b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseTeleport"",
                    ""type"": ""Button"",
                    ""id"": ""b3125440-1eb5-481f-8dd0-c2fa87b9996f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UsePotion"",
                    ""type"": ""Button"",
                    ""id"": ""412a962c-b34e-4a7b-ab8a-1c1cb1dc080d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""4cecaa18-61de-4095-b2b2-22efd1e3b5f0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Map"",
                    ""type"": ""Button"",
                    ""id"": ""c940bd61-e99b-401f-8771-be9fd234aea5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use"",
                    ""type"": ""Button"",
                    ""id"": ""c268dfa2-641b-4b61-a747-59de711c291c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillsMenu"",
                    ""type"": ""Button"",
                    ""id"": ""a6dba9e5-66d9-49d6-99b6-61f53a2c48a2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""cc30d510-1f73-4d94-a8df-cafbe3e845af"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""88006967-0355-474c-898f-d1cfa413fa82"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""cb3d28f3-c92e-4f55-a00c-981c3c6f4d5c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d8ec48b4-9a0d-44f1-8d5c-b02ae1b4a7bc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c173a0df-6d52-4649-8dc5-9418fa171327"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""16212683-b9da-4778-8ab5-de85f8ee87e6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""770e68c7-7121-4785-9418-b491503cd951"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6bf75eb-0fa2-431d-8e63-34a2868a52f5"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f122e7b-9290-40fd-b10c-28cd34e3f645"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ef99b9a-36f6-4e01-b33e-b85458edd4ec"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MeleeAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36296a4b-d009-4d72-95e3-2112fef5cd3f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MagicAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ffdb929-e7fa-4331-b763-b18f7d832a9b"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4748a7b-fa97-4ff6-b50c-9b39db0c63de"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ecca6d5d-94d2-47f0-8871-b9eee02105f3"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseTeleport"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f8b1971-ebf0-413c-b065-3a5127045010"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UsePotion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a45b0b1a-66b2-4179-a149-d101ce71e9d0"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cdf78cf1-5f45-4b76-8920-7b1fd6a1e4b7"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ecc2e885-81a0-43bb-a69b-7ee457c07f53"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ab694d1-ca28-4afc-abdb-55ae2c68a912"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillsMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b6f30b4-6742-4011-9af6-cadab116e075"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e960d3c-a60b-46de-8f1f-317ff07dc569"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb7ca91e-6538-42f5-80eb-51c0866475f1"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player3rdPerson
        m_Player3rdPerson = asset.FindActionMap("Player3rdPerson", throwIfNotFound: true);
        m_Player3rdPerson_Movement = m_Player3rdPerson.FindAction("Movement", throwIfNotFound: true);
        m_Player3rdPerson_Look = m_Player3rdPerson.FindAction("Look", throwIfNotFound: true);
        m_Player3rdPerson_Jump = m_Player3rdPerson.FindAction("Jump", throwIfNotFound: true);
        m_Player3rdPerson_MeleeAttack = m_Player3rdPerson.FindAction("MeleeAttack", throwIfNotFound: true);
        m_Player3rdPerson_MagicAttack = m_Player3rdPerson.FindAction("MagicAttack", throwIfNotFound: true);
        m_Player3rdPerson_Dash = m_Player3rdPerson.FindAction("Dash", throwIfNotFound: true);
        m_Player3rdPerson_UseTeleport = m_Player3rdPerson.FindAction("UseTeleport", throwIfNotFound: true);
        m_Player3rdPerson_UsePotion = m_Player3rdPerson.FindAction("UsePotion", throwIfNotFound: true);
        m_Player3rdPerson_Inventory = m_Player3rdPerson.FindAction("Inventory", throwIfNotFound: true);
        m_Player3rdPerson_Map = m_Player3rdPerson.FindAction("Map", throwIfNotFound: true);
        m_Player3rdPerson_Use = m_Player3rdPerson.FindAction("Use", throwIfNotFound: true);
        m_Player3rdPerson_SkillsMenu = m_Player3rdPerson.FindAction("SkillsMenu", throwIfNotFound: true);
        m_Player3rdPerson_Pause = m_Player3rdPerson.FindAction("Pause", throwIfNotFound: true);
    }

    ~@GameController()
    {
        UnityEngine.Debug.Assert(!m_Player3rdPerson.enabled, "This will cause a leak and performance issues, GameController.Player3rdPerson.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player3rdPerson
    private readonly InputActionMap m_Player3rdPerson;
    private List<IPlayer3rdPersonActions> m_Player3rdPersonActionsCallbackInterfaces = new List<IPlayer3rdPersonActions>();
    private readonly InputAction m_Player3rdPerson_Movement;
    private readonly InputAction m_Player3rdPerson_Look;
    private readonly InputAction m_Player3rdPerson_Jump;
    private readonly InputAction m_Player3rdPerson_MeleeAttack;
    private readonly InputAction m_Player3rdPerson_MagicAttack;
    private readonly InputAction m_Player3rdPerson_Dash;
    private readonly InputAction m_Player3rdPerson_UseTeleport;
    private readonly InputAction m_Player3rdPerson_UsePotion;
    private readonly InputAction m_Player3rdPerson_Inventory;
    private readonly InputAction m_Player3rdPerson_Map;
    private readonly InputAction m_Player3rdPerson_Use;
    private readonly InputAction m_Player3rdPerson_SkillsMenu;
    private readonly InputAction m_Player3rdPerson_Pause;
    public struct Player3rdPersonActions
    {
        private @GameController m_Wrapper;
        public Player3rdPersonActions(@GameController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player3rdPerson_Movement;
        public InputAction @Look => m_Wrapper.m_Player3rdPerson_Look;
        public InputAction @Jump => m_Wrapper.m_Player3rdPerson_Jump;
        public InputAction @MeleeAttack => m_Wrapper.m_Player3rdPerson_MeleeAttack;
        public InputAction @MagicAttack => m_Wrapper.m_Player3rdPerson_MagicAttack;
        public InputAction @Dash => m_Wrapper.m_Player3rdPerson_Dash;
        public InputAction @UseTeleport => m_Wrapper.m_Player3rdPerson_UseTeleport;
        public InputAction @UsePotion => m_Wrapper.m_Player3rdPerson_UsePotion;
        public InputAction @Inventory => m_Wrapper.m_Player3rdPerson_Inventory;
        public InputAction @Map => m_Wrapper.m_Player3rdPerson_Map;
        public InputAction @Use => m_Wrapper.m_Player3rdPerson_Use;
        public InputAction @SkillsMenu => m_Wrapper.m_Player3rdPerson_SkillsMenu;
        public InputAction @Pause => m_Wrapper.m_Player3rdPerson_Pause;
        public InputActionMap Get() { return m_Wrapper.m_Player3rdPerson; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player3rdPersonActions set) { return set.Get(); }
        public void AddCallbacks(IPlayer3rdPersonActions instance)
        {
            if (instance == null || m_Wrapper.m_Player3rdPersonActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Player3rdPersonActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @MeleeAttack.started += instance.OnMeleeAttack;
            @MeleeAttack.performed += instance.OnMeleeAttack;
            @MeleeAttack.canceled += instance.OnMeleeAttack;
            @MagicAttack.started += instance.OnMagicAttack;
            @MagicAttack.performed += instance.OnMagicAttack;
            @MagicAttack.canceled += instance.OnMagicAttack;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @UseTeleport.started += instance.OnUseTeleport;
            @UseTeleport.performed += instance.OnUseTeleport;
            @UseTeleport.canceled += instance.OnUseTeleport;
            @UsePotion.started += instance.OnUsePotion;
            @UsePotion.performed += instance.OnUsePotion;
            @UsePotion.canceled += instance.OnUsePotion;
            @Inventory.started += instance.OnInventory;
            @Inventory.performed += instance.OnInventory;
            @Inventory.canceled += instance.OnInventory;
            @Map.started += instance.OnMap;
            @Map.performed += instance.OnMap;
            @Map.canceled += instance.OnMap;
            @Use.started += instance.OnUse;
            @Use.performed += instance.OnUse;
            @Use.canceled += instance.OnUse;
            @SkillsMenu.started += instance.OnSkillsMenu;
            @SkillsMenu.performed += instance.OnSkillsMenu;
            @SkillsMenu.canceled += instance.OnSkillsMenu;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IPlayer3rdPersonActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @MeleeAttack.started -= instance.OnMeleeAttack;
            @MeleeAttack.performed -= instance.OnMeleeAttack;
            @MeleeAttack.canceled -= instance.OnMeleeAttack;
            @MagicAttack.started -= instance.OnMagicAttack;
            @MagicAttack.performed -= instance.OnMagicAttack;
            @MagicAttack.canceled -= instance.OnMagicAttack;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @UseTeleport.started -= instance.OnUseTeleport;
            @UseTeleport.performed -= instance.OnUseTeleport;
            @UseTeleport.canceled -= instance.OnUseTeleport;
            @UsePotion.started -= instance.OnUsePotion;
            @UsePotion.performed -= instance.OnUsePotion;
            @UsePotion.canceled -= instance.OnUsePotion;
            @Inventory.started -= instance.OnInventory;
            @Inventory.performed -= instance.OnInventory;
            @Inventory.canceled -= instance.OnInventory;
            @Map.started -= instance.OnMap;
            @Map.performed -= instance.OnMap;
            @Map.canceled -= instance.OnMap;
            @Use.started -= instance.OnUse;
            @Use.performed -= instance.OnUse;
            @Use.canceled -= instance.OnUse;
            @SkillsMenu.started -= instance.OnSkillsMenu;
            @SkillsMenu.performed -= instance.OnSkillsMenu;
            @SkillsMenu.canceled -= instance.OnSkillsMenu;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IPlayer3rdPersonActions instance)
        {
            if (m_Wrapper.m_Player3rdPersonActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayer3rdPersonActions instance)
        {
            foreach (var item in m_Wrapper.m_Player3rdPersonActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Player3rdPersonActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Player3rdPersonActions @Player3rdPerson => new Player3rdPersonActions(this);
    public interface IPlayer3rdPersonActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMeleeAttack(InputAction.CallbackContext context);
        void OnMagicAttack(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnUseTeleport(InputAction.CallbackContext context);
        void OnUsePotion(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnMap(InputAction.CallbackContext context);
        void OnUse(InputAction.CallbackContext context);
        void OnSkillsMenu(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
}
